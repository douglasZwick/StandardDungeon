class PlayerSword : ZilchComponent
{
  [Dependency]
  var Transform : Transform;
  [Dependency]
  var Sprite : Sprite;
  
  
  [Property]
  var HitboxArchetype : Archetype = null;
  [Property]
  var AttackCueA : SoundCue;
  [Property]
  var AttackCueB : SoundCue;
  [Property]
  var AttackCueC : SoundCue;
  
  var SwordReady : Boolean = false;
  var HitboxRef : Cog;
  var Gamepad : Gamepad;
  var OddAttack : Boolean = false;
  
  
  function Initialize(init : CogInitializer)
  {
    this.Gamepad = Zero.Gamepads.GetGamePad(0);
    
    Zero.Connect(Zero.Keyboard, Events.KeyDown, this.OnKeyDown);
    Zero.Connect(Zero.Keyboard, Events.KeyUp, this.OnKeyUp);
    Zero.Connect(this.Gamepad, Events.ButtonDown, this.OnButtonDown);
    Zero.Connect(this.Gamepad, Events.ButtonUp, this.OnButtonUp);
    Zero.Connect(this.Owner, Events.DidEquipWeapon, this.OnDidEquipWeapon);
  }
  
  
  function OnDidEquipWeapon(event : CollectionEvent)
  {
    this.HitboxArchetype = event.Weapon.HitboxArchetype;
  }
  
  
  function OnKeyDown(event : KeyboardEvent)
  {
    // TODO: provide feedback that this is how you attack before you actually get a weapon
    if (this.HitboxArchetype == null)
      return;
    
    if(event.Key == Keys.Space)
    {
      this.GetReady();
    }
    if(this.SwordReady)
    {
      if(event.Key == Keys.Left || event.Key == Keys.A)
      {
        this.Slash(-Real3.XAxis);
      } 
      else if(event.Key == Keys.Right || event.Key == Keys.D)
      {
        this.Slash(Real3.XAxis);
      }
      else if(event.Key == Keys.Up || event.Key == Keys.W)
      {
        this.Slash(Real3.YAxis);
      }
      else if(event.Key == Keys.Down || event.Key == Keys.S)
      {
        this.Slash(-Real3.YAxis);
      }
    }
  }
  
  
  function OnKeyUp(event : KeyboardEvent)
  {
    if(event.Key == Keys.Space)
      this.CalmDown();
    else if(event.Key == Keys.Left || event.Key == Keys.Right || event.Key == Keys.Up || event.Key == Keys.Down  || event.Key == Keys.D || event.Key == Keys.A || event.Key == Keys.S || event.Key == Keys.W)
      this.AttackEnd();
  }
  
  
  function OnButtonDown(event : GamepadEvent)
  {
    if(event.Button == Buttons.A)
    {
      this.GetReady();
    }
    if(this.SwordReady)
    {
      if(event.Button == Buttons.DpadLeft)
      {
        this.Slash(-Real3.XAxis);
      } 
      else if(event.Button == Buttons.DpadRight)
      {
        this.Slash(Real3.XAxis);
      }
      else if(event.Button == Buttons.DpadUp)
      {
        this.Slash(Real3.YAxis);
      }
      else if(event.Button == Buttons.DpadDown)
      {
        this.Slash(-Real3.YAxis);
      }
    }
  }
  
  
  function OnButtonUp(event : GamepadEvent)
  {
    if      (event.Button == Buttons.A)
      this.CalmDown();
    else if (event.Button == Buttons.DpadLeft || event.Button == Buttons.DpadRight || event.Button == Buttons.DpadUp || event.Button == Buttons.DpadDown)
      this.AttackEnd();
  }
  
  
  function Slash(offset : Real3)
  {
    if (this.HitboxRef == null)
    {
      this.OddAttack = false;
      
      if (this.AttackCueA != null)
        this.Space.SoundSpace.PlayCue(this.AttackCueA);
    }
    else
    {
      var cue = this.AttackCueB;
      
      if (this.OddAttack)
        cue = this.AttackCueC;
      
      if (cue != null)
        this.Space.SoundSpace.PlayCue(cue);
      
      this.OddAttack = !this.OddAttack;
    }
    
    this.Sprite.SpriteSource = SpriteSource.PoochaAttack;
    var spawnLocation = this.Transform.WorldTranslation + offset;
    this.DestroyOldSword();
    this.HitboxRef = this.Space.CreateAtPosition(this.HitboxArchetype, spawnLocation);
  }
  
  
  function AttackEnd()
  {
    if (this.SwordReady)
      this.Sprite.SpriteSource = SpriteSource.PoochaReady;
  }
  
  
  function GetReady()
  {
    this.SwordReady = true;
    this.Sprite.SpriteSource = SpriteSource.PoochaReady;
  }
  
  
  function CalmDown()
  {
    this.SwordReady = false;
    this.Sprite.SpriteSource = SpriteSource.PoochaIdle;
  }
  
  
  function DestroyOldSword()
  {
    if(this.HitboxRef != null)
    {
      this.HitboxRef.Destroy();
    }
  }
}

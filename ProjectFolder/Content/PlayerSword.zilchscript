class PlayerSword : ZilchComponent
{
  var SwordReady : Boolean = false;
  [Property]
  var SwordHitBoxArchetype : Archetype;
  var HitboxRef : Cog;
  
  function Initialize(init : CogInitializer)
  {
    //Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    Zero.Connect(Zero.Keyboard, Events.KeyDown, this.OnKeyDown);
    Zero.Connect(Zero.Keyboard, Events.KeyUp, this.OnKeyUp);
  }

  function OnLogicUpdate(event : UpdateEvent)
  {
    
  }
  
  function OnKeyDown(event : KeyboardEvent)
  {
    if(event.Key == Keys.Space)
    {
      this.SwordReady = true;
      this.Owner.Sprite.SpriteSource = SpriteSource.PoochaReady;
    }
    if(this.SwordReady)
    {
      if(event.Key == Keys.Left)
      {
        this.Owner.Sprite.SpriteSource = SpriteSource.PoochaAttack;
        var spawnLocation = this.Owner.Transform.Translation + Real3(-1, 0, 0);
        this.HitboxRef = this.Space.CreateAtPosition(this.SwordHitBoxArchetype, spawnLocation);
      } 
      else if(event.Key == Keys.Right)
      {
        this.Owner.Sprite.SpriteSource = SpriteSource.PoochaAttack;
        var spawnLocation = this.Owner.Transform.Translation + Real3(1, 0, 0);
        this.HitboxRef = this.Space.CreateAtPosition(this.SwordHitBoxArchetype, spawnLocation);
  
      }
      else if(event.Key == Keys.Up)
      {
        this.Owner.Sprite.SpriteSource = SpriteSource.PoochaAttack;
        var spawnLocation = this.Owner.Transform.Translation + Real3(0, 1, 0);
        this.HitboxRef = this.Space.CreateAtPosition(this.SwordHitBoxArchetype, spawnLocation);
      }
      else if(event.Key == Keys.Down)
      {
        this.Owner.Sprite.SpriteSource = SpriteSource.PoochaAttack;
        var spawnLocation = this.Owner.Transform.Translation + Real3(0, -1, 0);
        this.HitboxRef = this.Space.CreateAtPosition(this.SwordHitBoxArchetype, spawnLocation);
      }
    }
  }
  
  function OnKeyUp(event : KeyboardEvent)
  {
    if(event.Key == Keys.Space)
    {
      this.SwordReady = false;
      this.Owner.Sprite.SpriteSource = SpriteSource.PoochaIdle;
    }
    else if(event.Key == Keys.Left || event.Key == Keys.Right || event.Key == Keys.Up || event.Key == Keys.Down)
    {
      this.Owner.Sprite.SpriteSource = SpriteSource.PoochaReady;
    }
  }
}

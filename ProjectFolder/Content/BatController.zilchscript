class BatController : ZilchComponent
{
  sends BatTick : ZilchEvent;
  
  
  [Dependency]
  var Transform : Transform;
  [Dependency]
  var Mover : DiscreteMover;
  [Dependency]
  var AiTicker : AiTicker;
  
  
  var PlayerRef : Cog;
  var RNG : Random = Random();
  var Randomness : Real = 0.5;
  
  
  function Initialize(init : CogInitializer)
  {
    Zero.Connect(this.Owner, Events.AiTick, this.OnAiTick);
    
    this.PlayerRef = this.Space.FindObjectByName("Hero");
  }
  
  
  function OnAiTick(event : TickEvent)
  {
    var r = this.RNG.Real();
    
    if (r > this.Randomness)
    {
      var diff = this.PlayerRef.Transform.WorldTranslation - this.Transform.WorldTranslation;
      var hDiff = diff.X;
      var vDiff = diff.Y;
      
      if(Math.Abs(hDiff) > Math.Abs(vDiff))
      {
        //Move horizontally
        if(hDiff < 0)
        {
          this.MoveLeft();
        }
        else
        {
          this.MoveRight();
        }
      }
      else
      {
        //Move vertically
        if(vDiff < 0)
        {
          this.MoveDown();
        }
        else
        {
          this.MoveUp();
        }
      }
    }
    else
    {
      var directionIndex = this.RNG.DieRoll(4);
      
      if      (directionIndex == 1)
        this.MoveRight();
      else if (directionIndex == 2)
        this.MoveLeft();
      else if (directionIndex == 3)
        this.MoveUp();
      else // (directionIndex == 4)
        this.MoveDown();
    }
  }
  
  
  function MoveRight()
  {
    this.Mover.Move(Real3.XAxis);
  }
  
  
  function MoveLeft()
  {
    this.Mover.Move(-Real3.XAxis);
  }
  
  
  function MoveUp()
  {
    this.Mover.Move(Real3.YAxis);
  }
  
  
  function MoveDown()
  {
    this.Mover.Move(-Real3.YAxis);
  }
}

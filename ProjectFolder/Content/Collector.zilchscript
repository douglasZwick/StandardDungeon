class Collector : ZilchComponent
{
  sends AttemptCollect : CollectionEvent;
  sends DidCollect : CollectionEvent;
  
  
  [Property]
  var ColliderPath : CogPath = CogPath(".");
  
  var Gold : Integer = 0;
  var Keys : Integer = 0;
  
  
  function Initialize(init : CogInitializer)
  {
    // TODO: if we end up deciding that we want to be able to attempt to collect something
    // that's in a square that cannot be walked into, then i could change this to use a
    // collider cast during the MovementAttempted event
    
    Zero.Connect(this.ColliderPath.Cog, Events.CollisionStarted, this.OnCollisionStarted);
  }
  
  
  function OnCollisionStarted(event : CollisionEvent)
  {
    this.AttemptCollect(event.OtherObject);
  }
  
  
  function AttemptCollect(cog : Cog)
  {
    var ce = CollectionEvent();
    cog.DispatchEvent(Events.AttemptCollect, ce);
    
    var collectable = ce.Collectable;
    
    if (collectable != null)
      this.Owner.DispatchEvent(Events.DidCollect, ce);
  }
}

class Collector : ZilchComponent
{
  sends AttemptCollect : CollectionEvent;
  sends WasCollected : CollectionEvent;
  sends DidCollect : CollectionEvent;
  
  
  [Property]
  var ColliderPath : CogPath = CogPath(".");
  
  var Gold : Integer = 0;
  var Keys : Integer = 0;
  var Collider : Collider;
  var CastFilter : CastFilter = CastFilter();
  
  
  function Initialize(init : CogInitializer)
  {
    this.Collider = this.ColliderPath.Collider;
    this.CastFilter.IgnoreGhost = false;
    
    Zero.Connect(this.Owner, Events.MovementAttempted, this.OnMovementAttempted);
  }
  
  
  function OnMovementAttempted(event : MovementEvent)
  {
    var colliderPosition = this.Collider.Owner.Transform.WorldTranslation;
    var attemptedPosition = event.AttemptedPosition;
    var offset = attemptedPosition - colliderPosition;
    
    var ce = CollectionEvent();
    ce.Collector = this;
    
    var results = this.Space.PhysicsSpace.CastCollider(offset, this.Collider, this.CastFilter);
    
    foreach (var result in results)
      this.AttemptCollect(result.ObjectHit);
  }
  
  
  function AttemptCollect(cog : Cog)
  {
    var ce = CollectionEvent();
    ce.Collector = this;
    cog.DispatchEvent(Events.AttemptCollect, ce);
    
    var collectable = ce.Collectable;
    
    if (collectable != null)
      this.Owner.DispatchEvent(Events.DidCollect, ce);
  }
}

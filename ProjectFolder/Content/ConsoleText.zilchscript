class ConsoleText : ZilchComponent
{
  [Static]
  var LineSpacing : Real = 1 / 3.0;
  
  
  [Property]
  var SubTextArchetype : Archetype = Archetype.ConsoleSubText;
  
  var TextArray : Array[Cog] = Array[Cog]();
  
  
  function Setup(textArray : Array[String])
  {
    var count = textArray.Count;
    
    for (var i = 0; i < count; ++i)
    {
      var text = textArray[i];
      
      if (String.IsNullOrEmpty(text))
        continue;
      
      var y = (count - 1 - i) * ConsoleText.LineSpacing;
      var localPosition = Real3.YAxis * y;
      var subtext = this.Space.CreateAtPosition(this.SubTextArchetype, localPosition);
      subtext.AttachToPreserveLocal(this.Owner);
      
      subtext.SpriteText.Text = text;
      
      this.TextArray.Add(subtext);
    }
  }
  
  
  function SetColor(color : Real4)
  {
    foreach (var text in this.TextArray)
      text.SpriteText.VertexColor = color;
  }
  
  
  function SetOpacity(opacity : Real)
  {
    foreach (var text in this.TextArray)
    {
      var spriteText = text.SpriteText;
      var color = spriteText.VertexColor;
      color.W = opacity;
      spriteText.VertexColor = color;
    }
  }
}

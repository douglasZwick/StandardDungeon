class HeroController : ZilchComponent
{
  [Dependency]
  var Mover : DiscreteMover;
  
  
  var Gamepad : Gamepad;
  
  var CanMove : Boolean
  {
    get
    {
      // TODO: do this better
      var attacking = Zero.Keyboard.KeyIsDown(Keys.Space) ||
                      this.Gamepad.IsButtonHeld(Buttons.A);
      
      return !attacking;
    }
  }
  
  
  function Initialize(init : CogInitializer)
  {
    this.Gamepad = Zero.Gamepads.GetGamePad(0);
    
    Zero.Connect(Zero.Keyboard, Events.KeyDown, this.OnKeyDown);
    Zero.Connect(this.Gamepad, Events.ButtonDown, this.OnButtonDown);
  }
  
  
  function OnKeyDown(event : KeyboardEvent)
  {
    if (!this.CanMove) return;
    
    if      (event.Key == Keys.Right)
      this.Mover.Move(+Real3.XAxis);
    else if (event.Key == Keys.Left)
      this.Mover.Move(-Real3.XAxis);
    else if (event.Key == Keys.Up)
      this.Mover.Move(+Real3.YAxis);
    else if (event.Key == Keys.Down)
      this.Mover.Move(-Real3.YAxis);
  }
  
  
  function OnButtonDown(event : GamepadEvent)
  {
    if (!this.CanMove) return;
    
    if      (event.Button == Buttons.DpadRight)
      this.Mover.Move(+Real3.XAxis);
    else if (event.Button == Buttons.DpadLeft)
      this.Mover.Move(-Real3.XAxis);
    else if (event.Button == Buttons.DpadUp)
      this.Mover.Move(+Real3.YAxis);
    else if (event.Button == Buttons.DpadDown)
      this.Mover.Move(-Real3.YAxis);
  }
}

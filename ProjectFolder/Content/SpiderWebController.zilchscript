class SpiderWebController : ZilchComponent
{
  [Property]
  var WebStrength : Integer = 5;
  
  [Dependency]
  var Sprite : Sprite;
  
  var BlinkTime : Real = 0.05;
  
  function Initialize(init : CogInitializer)
  {
    Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
    Zero.Connect(this.Owner, Events.BreakAttempt, this.OnBreakAttempt);
  }
  
  
  function OnCollisionStarted(event : CollisionEvent)
  {
    var we = WebEvent();
    we.Web = this;
    event.OtherObject.DispatchEvent(Events.RequestTrapInWeb, we);
  }
  
  
  function OnBreakAttempt(event : WebEvent)
  {
    this.WebStrength -= event.BreakingStrength;
    
    this.Sprite.Visible = false;
    var seq = Action.Sequence(this.Owner.Actions);
      Action.Delay(seq, this.BlinkTime);
      Action.Property(seq, @this.Sprite.Visible, true, 0, Ease.Linear);
    
    if (this.WebStrength <= 0)
    {
      // TODO: put some feedback here maybe
      
      this.Owner.Destroy();
    }
  }
}
